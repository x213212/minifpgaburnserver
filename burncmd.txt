# This script can be executed using the Vivado command line for hardware programming.

# Open hardware and connect to the hardware server
open_hw
connect_hw_server
puts "INFO: Connected to the hardware server."

# Open the hardware target
open_hw_target
puts "INFO: Hardware target opened."

# Get the current device
set current_device [get_hw_devices xc7k410t_0]

# Refresh the hardware device
refresh_hw_device -update_hw_probes false [lindex $current_device 0]
puts "INFO: Device refreshed."

# Create a configuration memory device
create_hw_cfgmem -hw_device [lindex $current_device 0] [lindex [get_cfgmem_parts {28f00am29ew-bpi-x16}] 0]
puts "INFO: Configuration memory created."

# Set programming-related properties
set cfgmem [get_property PROGRAM.HW_CFGMEM [lindex $current_device 0]]
set_property PROGRAM.BLANK_CHECK 0 $cfgmem
set_property PROGRAM.ERASE 1 $cfgmem
set_property PROGRAM.CFG_PROGRAM 1 $cfgmem
set_property PROGRAM.VERIFY 1 $cfgmem
set_property PROGRAM.CHECKSUM 0 $cfgmem
puts "INFO: Programming properties set."

# Refresh the hardware device to apply changes
refresh_hw_device [lindex $current_device 0]
puts "INFO: Device refreshed."

# Set address range and file paths
set_property PROGRAM.ADDRESS_RANGE {use_file} $cfgmem
set_property PROGRAM.FILES [list "C://path_to_your_file//xxx.mcs"] $cfgmem
set_property PROGRAM.PRM_FILE {} $cfgmem
set_property PROGRAM.BPI_RS_PINS {none} $cfgmem
set_property PROGRAM.UNUSED_PIN_TERMINATION {pull-none} $cfgmem
puts "INFO: Programming files and additional properties set."

# Re-set programming properties to ensure operations are executed correctly
set_property PROGRAM.BLANK_CHECK 0 $cfgmem
set_property PROGRAM.ERASE 1 $cfgmem
set_property PROGRAM.CFG_PROGRAM 1 $cfgmem
set_property PROGRAM.VERIFY 1 $cfgmem
set_property PROGRAM.CHECKSUM 0 $cfgmem
puts "INFO: Final programming properties set."

# Execute the configuration memory programming operation
startgroup
if {![string equal [get_property PROGRAM.HW_CFGMEM_TYPE [lindex $current_device 0]] [get_property MEM_TYPE [get_property CFGMEM_PART [get_property PROGRAM.HW_CFGMEM [lindex $current_device 0]]]]} {
    create_hw_bitstream -hw_device [lindex $current_device 0] [get_property PROGRAM.HW_CFGMEM_BITFILE [lindex $current_device 0]]
    program_hw_devices [lindex $current_device 0]
}
program_hw_cfgmem -hw_cfgmem $cfgmem
endgroup

# Delete the configuration memory
delete_hw_cfgmem [get_property PROGRAM.HW_CFGMEM [get_hw_devices xc7k410t_0]]

# Restart the device
boot_hw_device [lindex [get_hw_devices xc7k410t_0] 0]
refresh_hw_device [lindex [get_hw_devices xc7k410t_0] 0]

# Program the bitstream file
open_hw
connect_hw_server
puts "INFO: Connected to the hardware server."

# Open the hardware target
open_hw_target
puts "INFO: Hardware target opened."

# Get the current device
set current_device [get_hw_devices xc7k410t_0]

# Refresh the hardware device
refresh_hw_device -update_hw_probes false [lindex $current_device 0]
set_property PROBES.FILE {} [get_hw_devices xc7k410t_0]
set_property FULL_PROBES.FILE {} [get_hw_devices xc7k410t_0]
set_property PROGRAM.FILE {C:/path_to_your_file/xxx.bit} [get_hw_devices xc7k410t_0]
program_hw_devices [get_hw_devices xc7k410t_0]
refresh_hw_device [lindex [get_hw_devices xc7k410t_0] 0]
